@model IEnumerable<Consultation>
@{
    ViewData["Title"] = "Consultation List";
}


<style>
    @@media print {
        body {
            text-align: left !important;
            font-size: 12px;
        }

        table {
            width: 100%;
        }
    }

    .custom-table {
        overflow-x: auto;
    }

    .table-responsive {
        overflow-x: auto;
    }


    #studentTable {
        width: 100%;
        border-collapse: collapse;
    }

        #studentTable th, #studentTable td {
            white-space: nowrap;
            vertical-align: middle;
        }

    /* Scrollbar Styling */
    .custom-table::-webkit-scrollbar {
        height: 5px !important;
    }

    .custom-table::-webkit-scrollbar-track {
        background: #fff !important;
        border-radius: 15px !important;
    }

    .custom-table::-webkit-scrollbar-thumb {
        background: #888 !important;
        border-radius: 10px !important;
    }

        .custom-table::-webkit-scrollbar-thumb:hover {
            background: red !important;
        }

    .table-responsive {
        overflow-x: auto;
        scroll-behavior: smooth;
    }

    .table-responsive {
        border-top: 1px solid #dee2e6;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        padding-bottom: 5px;
    }


    /* Excel Button Styling */
    div.dt-buttons {
        position: relative;
        top: -55px;
        left: 50%;
    }

    button.dt-button.buttons-excel {
        background-color: #4CAF50;
        color: white;
        padding: 8px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        width: 160px;
    }

        button.dt-button.buttons-excel:hover {
            background-color: #45a049 !important;
        }

    .container, .container-md, .container-sm {
        max-width: 95% !important;
    }

</style>

<div class="row">
    <div class="col-12">
        <div class="" style="float:right; margin-bottom:15px">
            <a asp-action="Create" class="btn btn-outline-primary">
                Create New Consultation
            </a>
        </div>
    </div>
</div>

<div class="custom-table">

    <div class="row mb-3">
        <div class="col-md-3">
            <label for="minDate" class="form-label">From:</label>
            <input type="text" id="minDate" class="form-control" placeholder="dd-mm-yyyy" />
        </div>
        <div class="col-md-3">
            <label for="maxDate" class="form-label">To:</label>
            <input type="text" id="maxDate" class="form-control" placeholder="dd-mm-yyyy" />
        </div>
    </div>


    <table id="studentTable" class="table table-striped table-responsive table-hover">
        <thead>
            <tr>
                <th style="display:none;">Id</th>
                <th>Academic Year</th>
                <th>Class Name</th>
                <th>Student Name</th>
                <th>Parent Name</th>
                <th>Mobile</th>
                <th>Transfered From</th>
                <th>Status</th>
                <th>Consultation Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="display:none;">@item.Id</td>
                    <td>@item.AcadamicYear</td>
                    <td>@item.ClassName</td>
                    <td>@item.StudentName</td>
                    <td>@item.ParentName</td>
                    <td>@item.Mobile</td>
                    <td>
                        @{
                            string? psn = "NA";
                            if (!string.IsNullOrEmpty(item.PreviousSchoolName))
                                psn =item.PreviousSchoolName;

                            <span>@psn</span>
                        }
                    </td>
                    <td>@item.Status</td>
                    <td>
                        @item.CreatedOn?.ToString("yyyy-MM-dd")
                    </td>
                    <td class="noExport">
                        <a asp-action="Edit" class="btn btn-outline-info" asp-route-id="@item.Id">Edit</a> |
                        <a href="javascript:void(0)" onclick="printReceipt(@item.Id)" class="btn btn-outline-info">Print</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        flatpickr("#minDate", {
            dateFormat: "Y-m-d",
            onChange: function (selectedDates, dateStr) {
                maxPicker.set('minDate', dateStr);
                $('#studentTable').DataTable().draw();
            }
        });

        const maxPicker = flatpickr("#maxDate", {
            dateFormat: "Y-m-d",
            onChange: function (selectedDates, dateStr) {
                flatpickr("#minDate").set('maxDate', dateStr);
                $('#studentTable').DataTable().draw();
            }
        });

        // Custom DataTable filtering for date range
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = $('#minDate').val();
                var max = $('#maxDate').val();
                var date = data[8];

                if (!min && !max) return true;

                if (min && date < min) return false;
                if (max && date > max) return false;

                return true;
            }
        );

        $(document).ready(function () {
            var table = $('#studentTable').DataTable({
                dom: 'Bfrtip',
                order: [[8, 'desc']],
                buttons: [
                    {
                        extend: 'excelHtml5',
                        title: 'Filtered Student Data',
                        filename: function () {
                            let today = new Date().toISOString().split('T')[0];
                            return 'Consultation_Record_Data_' + today;
                        },
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 8],
                            modifier: {
                                search: 'applied'
                            }
                        }
                    }
                ]
            });
        });

        function printReceipt(consultationId) {
            fetch(`/Home/Print/${consultationId}`, { method: 'POST' })
                .then(response => response.blob())
                .then(blob => {
                    var url = window.URL.createObjectURL(blob);
                    var printWindow = window.open(url);
                    setTimeout(() => {
                        printWindow.print();
                    }, 10);
                })
                .catch(error => console.error('Error printing:', error));
        }
    </script>
}